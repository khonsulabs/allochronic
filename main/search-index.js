var searchIndex = JSON.parse('{\
"allochronic":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"allochronic_util":{"doc":"TODO","t":[5,3,5,3,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["poll","PollOnce","yield","Yield","select","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_future","from","into","try_from","borrow","borrow_mut","try_into","type_id","into_future","fmt","fmt","poll","poll","new","new"],"q":["allochronic_util","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["<code>Poll</code>s a [<code>Future</code>] a single time, returning [<code>Poll</code>].","<code>Poll</code>s a [<code>Future</code>] a single time, returning [<code>Poll</code>]. See […","Yields to the executor once.","Yields to the executor once. See [<code>yield</code>] for easier usage.","Polls all passed <code>Future</code>s or <code>Stream</code>s until one is ready …","","","","","","","","","","","","","","","","","","","","","Builds a new [<code>PollOnce</code>].","Builds a new [<code>Yield</code>]."],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,1,2,1,2,1,2],"f":[[[["future",8]],[["future",8],["pollonce",3]]],null,[[],["yield",3]],null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["context",3],["pin",3]],["poll",4]],[[["context",3],["pin",3]],["poll",4]],[[]],[[]]],"p":[[3,"PollOnce"],[3,"Yield"]]},\
"allochronic_util_macros":{"doc":"Proc-Macros for the <code>allochronic-util</code> crate.","t":[14],"n":["select"],"q":["allochronic_util_macros"],"d":["Polls all passed <code>Future</code>s or <code>Stream</code>s until one is ready …"],"i":[0],"f":[null],"p":[]}\
}');
initSearch(searchIndex);